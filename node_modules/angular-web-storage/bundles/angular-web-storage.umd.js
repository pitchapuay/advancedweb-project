(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core')) :
    typeof define === 'function' && define.amd ? define('angular-web-storage', ['exports', '@angular/core'], factory) :
    (global = global || self, factory(global['angular-web-storage'] = {}, global.ng.core));
}(this, (function (exports, core) { 'use strict';

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation. All rights reserved.
    Licensed under the Apache License, Version 2.0 (the "License"); you may not use
    this file except in compliance with the License. You may obtain a copy of the
    License at http://www.apache.org/licenses/LICENSE-2.0

    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
    MERCHANTABLITY OR NON-INFRINGEMENT.

    See the Apache Version 2.0 License for specific language governing permissions
    and limitations under the License.
    ***************************************************************************** */
    /* global Reflect, Promise */

    var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };

    function __extends(d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }

    var __assign = function() {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };

    function __rest(s, e) {
        var t = {};
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
            t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    }

    function __decorate(decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    }

    function __param(paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); }
    }

    function __metadata(metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
    }

    function __awaiter(thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
            function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    }

    function __generator(thisArg, body) {
        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f) throw new TypeError("Generator is already executing.");
            while (_) try {
                if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
                if (y = 0, t) op = [op[0] & 2, t.value];
                switch (op[0]) {
                    case 0: case 1: t = op; break;
                    case 4: _.label++; return { value: op[1], done: false };
                    case 5: _.label++; y = op[1]; op = [0]; continue;
                    case 7: op = _.ops.pop(); _.trys.pop(); continue;
                    default:
                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                        if (t[2]) _.ops.pop();
                        _.trys.pop(); continue;
                }
                op = body.call(thisArg, _);
            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
        }
    }

    function __exportStar(m, exports) {
        for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
    }

    function __values(o) {
        var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
        if (m) return m.call(o);
        if (o && typeof o.length === "number") return {
            next: function () {
                if (o && i >= o.length) o = void 0;
                return { value: o && o[i++], done: !o };
            }
        };
        throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
    }

    function __read(o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m) return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
        }
        catch (error) { e = { error: error }; }
        finally {
            try {
                if (r && !r.done && (m = i["return"])) m.call(i);
            }
            finally { if (e) throw e.error; }
        }
        return ar;
    }

    function __spread() {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    }

    function __spreadArrays() {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                r[k] = a[j];
        return r;
    };

    function __await(v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
    }

    function __asyncGenerator(thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []), i, q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
        function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
        function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
        function fulfill(value) { resume("next", value); }
        function reject(value) { resume("throw", value); }
        function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
    }

    function __asyncDelegator(o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
    }

    function __asyncValues(o) {
        if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator], i;
        return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
    }

    function __makeTemplateObject(cooked, raw) {
        if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
        return cooked;
    };

    function __importStar(mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
        result.default = mod;
        return result;
    }

    function __importDefault(mod) {
        return (mod && mod.__esModule) ? mod : { default: mod };
    }

    function __classPrivateFieldGet(receiver, privateMap) {
        if (!privateMap.has(receiver)) {
            throw new TypeError("attempted to get private field on non-instance");
        }
        return privateMap.get(receiver);
    }

    function __classPrivateFieldSet(receiver, privateMap, value) {
        if (!privateMap.has(receiver)) {
            throw new TypeError("attempted to set private field on non-instance");
        }
        privateMap.set(receiver, value);
        return value;
    }

    /**
     * 判断是否在浏览器中渲染Angular应用
     * `decorator` 无法直接使用Angular `PLATFORM_ID` 标识
     * 这带来的好处是当服务端自行填充 Document 时也能很好的识别
     */
    var isBrowser = typeof document === 'object' && !!document;
    var StorageUtil = /** @class */ (function () {
        function StorageUtil() {
        }
        StorageUtil.get = function (storage, key) {
            if (storage == null) {
                return null;
            }
            var value = StorageUtil.parse(storage.getItem(key) || 'null') || null;
            if (value === null)
                return null;
            if (typeof value === 'object' &&
                typeof value._expired !== 'undefined' &&
                value._expired !== 0 &&
                +new Date() > value._expired) {
                StorageUtil.remove(storage, key);
                return null;
            }
            return value._value || null;
        };
        StorageUtil.set = function (storage, key, value, expiredAt, expiredUnit) {
            if (expiredAt === void 0) { expiredAt = 0; }
            if (expiredUnit === void 0) { expiredUnit = 't'; }
            if (storage == null) {
                return;
            }
            storage.setItem(key, StorageUtil.stringify({
                _expired: StorageUtil.getExpired(expiredAt, expiredUnit),
                _value: value,
            }));
        };
        StorageUtil.remove = function (storage, key) {
            if (storage == null) {
                return;
            }
            storage.removeItem(key);
        };
        StorageUtil.key = function (storage, index) {
            if (storage == null) {
                return;
            }
            return storage.key(index);
        };
        StorageUtil.getExpired = function (val, unit) {
            if (val <= 0)
                return 0;
            var now = +new Date();
            switch (unit) {
                case 's': // 秒
                    return now + 1000 * val;
                case 'm': // 分
                    return now + 1000 * 60 * val;
                case 'h': // 时
                    return now + 1000 * 60 * 60 * val;
                case 'd': // 天
                    return now + 1000 * 60 * 60 * 24 * val;
                case 'w': // 周
                    return now + 1000 * 60 * 60 * 24 * 7 * val;
                case 'y': // 年
                    return now + 1000 * 60 * 60 * 24 * 365 * val;
                case 't': // 自定义
                    return now + val;
            }
            return 0;
        };
        StorageUtil.stringify = function (value) {
            return JSON.stringify(value);
        };
        StorageUtil.parse = function (text) {
            try {
                return JSON.parse(text) || null;
            }
            catch (e) {
                return text;
            }
        };
        return StorageUtil;
    }());

    var cache = {};
    function WebStorage(storage, key, expiredAt, expiredUnit) {
        if (expiredAt === void 0) { expiredAt = 0; }
        if (expiredUnit === void 0) { expiredUnit = 'd'; }
        return function (target, propertyName) {
            key = key || propertyName;
            Object.defineProperty(target, propertyName, {
                get: function () {
                    return StorageUtil.get(storage, key);
                },
                set: function (value) {
                    if (!cache[key]) {
                        var storedValue = StorageUtil.get(storage, key);
                        if (storedValue === null) {
                            StorageUtil.set(storage, key, value, expiredAt, expiredUnit);
                        }
                        cache[key] = true;
                        return;
                    }
                    StorageUtil.set(storage, key, value, expiredAt, expiredUnit);
                },
                enumerable: true,
                configurable: true,
            });
        };
    }
    /**
     * `localStorage` Decorator
     *
     * @param [expiredAt=0] Expiration time, 0 means forever
     * @param [expiredUnit='t'] Expiration time unit (default: custom [unit: ms])
     */
    function LocalStorage(key, expiredAt, expiredUnit) {
        if (expiredAt === void 0) { expiredAt = 0; }
        if (expiredUnit === void 0) { expiredUnit = 't'; }
        return WebStorage(isBrowser ? localStorage : null, key, expiredAt, expiredUnit);
    }
    /**
     * `sessionStorage` Decorator
     *
     * @param [expiredAt=0] Expiration time, 0 means forever
     * @param [expiredUnit='t'] Expiration time unit (default: custom [unit: ms])
     */
    function SessionStorage(key, expiredAt, expiredUnit) {
        if (expiredAt === void 0) { expiredAt = 0; }
        if (expiredUnit === void 0) { expiredUnit = 't'; }
        return WebStorage(isBrowser ? sessionStorage : null, key, expiredAt, expiredUnit);
    }

    var StorageService = /** @class */ (function () {
        function StorageService(storage) {
            this.storage = storage;
        }
        StorageService.prototype.get = function (key) {
            return StorageUtil.get(this.storage, key);
        };
        StorageService.prototype.set = function (key, value, expiredAt, expiredUnit) {
            if (expiredAt === void 0) { expiredAt = 0; }
            if (expiredUnit === void 0) { expiredUnit = 'd'; }
            return StorageUtil.set(this.storage, key, value, expiredAt, expiredUnit);
        };
        /**
         * 删除指定key，如：
         * - `remove('key')` 删除 `key` 键
         * - `remove(/BMap_\w+/)` 批量删除所有 BMap_ 开头的键
         * @param key 键名或正则表达式
         */
        StorageService.prototype.remove = function (key) {
            var _this = this;
            if (typeof key === 'string') {
                StorageUtil.remove(this.storage, key);
                return;
            }
            var index = 0;
            var next = StorageUtil.key(this.storage, index);
            var ls = [];
            while (next) {
                if (key.test(next))
                    ls.push(next);
                next = StorageUtil.key(this.storage, ++index);
            }
            ls.forEach(function (v) { return StorageUtil.remove(_this.storage, v); });
        };
        StorageService.prototype.clear = function () {
            this.storage.clear();
        };
        StorageService.ctorParameters = function () { return [
            { type: Storage }
        ]; };
        StorageService = __decorate([
            core.Injectable(),
            __metadata("design:paramtypes", [Storage])
        ], StorageService);
        return StorageService;
    }());
    var LocalStorageService = /** @class */ (function (_super) {
        __extends(LocalStorageService, _super);
        function LocalStorageService() {
            return _super.call(this, isBrowser ? localStorage : null) || this;
        }
        LocalStorageService.ɵprov = core["ɵɵdefineInjectable"]({ factory: function LocalStorageService_Factory() { return new LocalStorageService(); }, token: LocalStorageService, providedIn: "root" });
        LocalStorageService = __decorate([
            core.Injectable({ providedIn: 'root' }),
            __metadata("design:paramtypes", [])
        ], LocalStorageService);
        return LocalStorageService;
    }(StorageService));
    var SessionStorageService = /** @class */ (function (_super) {
        __extends(SessionStorageService, _super);
        function SessionStorageService() {
            return _super.call(this, isBrowser ? sessionStorage : null) || this;
        }
        SessionStorageService.ɵprov = core["ɵɵdefineInjectable"]({ factory: function SessionStorageService_Factory() { return new SessionStorageService(); }, token: SessionStorageService, providedIn: "root" });
        SessionStorageService = __decorate([
            core.Injectable({ providedIn: 'root' }),
            __metadata("design:paramtypes", [])
        ], SessionStorageService);
        return SessionStorageService;
    }(StorageService));

    var AngularWebStorageModule = /** @class */ (function () {
        function AngularWebStorageModule() {
        }
        AngularWebStorageModule = __decorate([
            core.NgModule()
        ], AngularWebStorageModule);
        return AngularWebStorageModule;
    }());

    exports.AngularWebStorageModule = AngularWebStorageModule;
    exports.LocalStorage = LocalStorage;
    exports.LocalStorageService = LocalStorageService;
    exports.SessionStorage = SessionStorage;
    exports.SessionStorageService = SessionStorageService;
    exports.StorageService = StorageService;

    Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=angular-web-storage.umd.js.map
