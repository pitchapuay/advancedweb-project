import { __decorate, __extends, __metadata } from "tslib";
import { Injectable } from '@angular/core';
import { StorageUtil, isBrowser } from './util';
import * as i0 from "@angular/core";
var StorageService = /** @class */ (function () {
    function StorageService(storage) {
        this.storage = storage;
    }
    StorageService.prototype.get = function (key) {
        return StorageUtil.get(this.storage, key);
    };
    StorageService.prototype.set = function (key, value, expiredAt, expiredUnit) {
        if (expiredAt === void 0) { expiredAt = 0; }
        if (expiredUnit === void 0) { expiredUnit = 'd'; }
        return StorageUtil.set(this.storage, key, value, expiredAt, expiredUnit);
    };
    /**
     * 删除指定key，如：
     * - `remove('key')` 删除 `key` 键
     * - `remove(/BMap_\w+/)` 批量删除所有 BMap_ 开头的键
     * @param key 键名或正则表达式
     */
    StorageService.prototype.remove = function (key) {
        var _this = this;
        if (typeof key === 'string') {
            StorageUtil.remove(this.storage, key);
            return;
        }
        var index = 0;
        var next = StorageUtil.key(this.storage, index);
        var ls = [];
        while (next) {
            if (key.test(next))
                ls.push(next);
            next = StorageUtil.key(this.storage, ++index);
        }
        ls.forEach(function (v) { return StorageUtil.remove(_this.storage, v); });
    };
    StorageService.prototype.clear = function () {
        this.storage.clear();
    };
    StorageService.ctorParameters = function () { return [
        { type: Storage }
    ]; };
    StorageService = __decorate([
        Injectable(),
        __metadata("design:paramtypes", [Storage])
    ], StorageService);
    return StorageService;
}());
export { StorageService };
var LocalStorageService = /** @class */ (function (_super) {
    __extends(LocalStorageService, _super);
    function LocalStorageService() {
        return _super.call(this, isBrowser ? localStorage : null) || this;
    }
    LocalStorageService.ɵprov = i0.ɵɵdefineInjectable({ factory: function LocalStorageService_Factory() { return new LocalStorageService(); }, token: LocalStorageService, providedIn: "root" });
    LocalStorageService = __decorate([
        Injectable({ providedIn: 'root' }),
        __metadata("design:paramtypes", [])
    ], LocalStorageService);
    return LocalStorageService;
}(StorageService));
export { LocalStorageService };
var SessionStorageService = /** @class */ (function (_super) {
    __extends(SessionStorageService, _super);
    function SessionStorageService() {
        return _super.call(this, isBrowser ? sessionStorage : null) || this;
    }
    SessionStorageService.ɵprov = i0.ɵɵdefineInjectable({ factory: function SessionStorageService_Factory() { return new SessionStorageService(); }, token: SessionStorageService, providedIn: "root" });
    SessionStorageService = __decorate([
        Injectable({ providedIn: 'root' }),
        __metadata("design:paramtypes", [])
    ], SessionStorageService);
    return SessionStorageService;
}(StorageService));
export { SessionStorageService };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL2FuZ3VsYXItd2ViLXN0b3JhZ2UvIiwic291cmNlcyI6WyJzcmMvc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMzQyxPQUFPLEVBQUUsV0FBVyxFQUFlLFNBQVMsRUFBRSxNQUFNLFFBQVEsQ0FBQzs7QUFHN0Q7SUFDRSx3QkFBb0IsT0FBZ0I7UUFBaEIsWUFBTyxHQUFQLE9BQU8sQ0FBUztJQUFHLENBQUM7SUFFeEMsNEJBQUcsR0FBSCxVQUFJLEdBQVc7UUFDYixPQUFPLFdBQVcsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLE9BQU8sRUFBRSxHQUFHLENBQUMsQ0FBQztJQUM1QyxDQUFDO0lBRUQsNEJBQUcsR0FBSCxVQUNFLEdBQVcsRUFDWCxLQUFVLEVBQ1YsU0FBcUIsRUFDckIsV0FBOEI7UUFEOUIsMEJBQUEsRUFBQSxhQUFxQjtRQUNyQiw0QkFBQSxFQUFBLGlCQUE4QjtRQUU5QixPQUFPLFdBQVcsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLE9BQU8sRUFBRSxHQUFHLEVBQUUsS0FBSyxFQUFFLFNBQVMsRUFBRSxXQUFXLENBQUMsQ0FBQztJQUMzRSxDQUFDO0lBRUQ7Ozs7O09BS0c7SUFDSCwrQkFBTSxHQUFOLFVBQU8sR0FBb0I7UUFBM0IsaUJBYUM7UUFaQyxJQUFJLE9BQU8sR0FBRyxLQUFLLFFBQVEsRUFBRTtZQUMzQixXQUFXLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxPQUFPLEVBQUUsR0FBRyxDQUFDLENBQUM7WUFDdEMsT0FBTztTQUNSO1FBQ0QsSUFBSSxLQUFLLEdBQUcsQ0FBQyxDQUFDO1FBQ2QsSUFBSSxJQUFJLEdBQUcsV0FBVyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFLEtBQUssQ0FBQyxDQUFDO1FBQ2hELElBQU0sRUFBRSxHQUFhLEVBQUUsQ0FBQztRQUN4QixPQUFPLElBQUksRUFBRTtZQUNYLElBQUksR0FBRyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUM7Z0JBQUUsRUFBRSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztZQUNsQyxJQUFJLEdBQUcsV0FBVyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFLEVBQUUsS0FBSyxDQUFDLENBQUM7U0FDL0M7UUFDRCxFQUFFLENBQUMsT0FBTyxDQUFDLFVBQUEsQ0FBQyxJQUFJLE9BQUEsV0FBVyxDQUFDLE1BQU0sQ0FBQyxLQUFJLENBQUMsT0FBTyxFQUFFLENBQUMsQ0FBQyxFQUFuQyxDQUFtQyxDQUFDLENBQUM7SUFDdkQsQ0FBQztJQUVELDhCQUFLLEdBQUw7UUFDRSxJQUFJLENBQUMsT0FBTyxDQUFDLEtBQUssRUFBRSxDQUFDO0lBQ3ZCLENBQUM7O2dCQXRDNEIsT0FBTzs7SUFEekIsY0FBYztRQUQxQixVQUFVLEVBQUU7eUNBRWtCLE9BQU87T0FEekIsY0FBYyxDQXdDMUI7SUFBRCxxQkFBQztDQUFBLEFBeENELElBd0NDO1NBeENZLGNBQWM7QUEyQzNCO0lBQXlDLHVDQUFjO0lBQ3JEO2VBQ0Usa0JBQU0sU0FBUyxDQUFDLENBQUMsQ0FBQyxZQUFZLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQztJQUN4QyxDQUFDOztJQUhVLG1CQUFtQjtRQUQvQixVQUFVLENBQUMsRUFBRSxVQUFVLEVBQUUsTUFBTSxFQUFFLENBQUM7O09BQ3RCLG1CQUFtQixDQUkvQjs4QkFuREQ7Q0FtREMsQUFKRCxDQUF5QyxjQUFjLEdBSXREO1NBSlksbUJBQW1CO0FBT2hDO0lBQTJDLHlDQUFjO0lBQ3ZEO2VBQ0Usa0JBQU0sU0FBUyxDQUFDLENBQUMsQ0FBQyxjQUFjLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQztJQUMxQyxDQUFDOztJQUhVLHFCQUFxQjtRQURqQyxVQUFVLENBQUMsRUFBRSxVQUFVLEVBQUUsTUFBTSxFQUFFLENBQUM7O09BQ3RCLHFCQUFxQixDQUlqQztnQ0ExREQ7Q0EwREMsQUFKRCxDQUEyQyxjQUFjLEdBSXhEO1NBSlkscUJBQXFCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBTdG9yYWdlVXRpbCwgRXhwaXJlZFVuaXQsIGlzQnJvd3NlciB9IGZyb20gJy4vdXRpbCc7XHJcblxyXG5ASW5qZWN0YWJsZSgpXHJcbmV4cG9ydCBjbGFzcyBTdG9yYWdlU2VydmljZSB7XHJcbiAgY29uc3RydWN0b3IocHJpdmF0ZSBzdG9yYWdlOiBTdG9yYWdlKSB7fVxyXG5cclxuICBnZXQoa2V5OiBzdHJpbmcpIHtcclxuICAgIHJldHVybiBTdG9yYWdlVXRpbC5nZXQodGhpcy5zdG9yYWdlLCBrZXkpO1xyXG4gIH1cclxuXHJcbiAgc2V0KFxyXG4gICAga2V5OiBzdHJpbmcsXHJcbiAgICB2YWx1ZTogYW55LFxyXG4gICAgZXhwaXJlZEF0OiBudW1iZXIgPSAwLFxyXG4gICAgZXhwaXJlZFVuaXQ6IEV4cGlyZWRVbml0ID0gJ2QnLFxyXG4gICkge1xyXG4gICAgcmV0dXJuIFN0b3JhZ2VVdGlsLnNldCh0aGlzLnN0b3JhZ2UsIGtleSwgdmFsdWUsIGV4cGlyZWRBdCwgZXhwaXJlZFVuaXQpO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICog5Yig6Zmk5oyH5a6aa2V577yM5aaC77yaXHJcbiAgICogLSBgcmVtb3ZlKCdrZXknKWAg5Yig6ZmkIGBrZXlgIOmUrlxyXG4gICAqIC0gYHJlbW92ZSgvQk1hcF9cXHcrLylgIOaJuemHj+WIoOmZpOaJgOaciSBCTWFwXyDlvIDlpLTnmoTplK5cclxuICAgKiBAcGFyYW0ga2V5IOmUruWQjeaIluato+WImeihqOi+vuW8j1xyXG4gICAqL1xyXG4gIHJlbW92ZShrZXk6IHN0cmluZyB8IFJlZ0V4cCkge1xyXG4gICAgaWYgKHR5cGVvZiBrZXkgPT09ICdzdHJpbmcnKSB7XHJcbiAgICAgIFN0b3JhZ2VVdGlsLnJlbW92ZSh0aGlzLnN0b3JhZ2UsIGtleSk7XHJcbiAgICAgIHJldHVybjtcclxuICAgIH1cclxuICAgIGxldCBpbmRleCA9IDA7XHJcbiAgICBsZXQgbmV4dCA9IFN0b3JhZ2VVdGlsLmtleSh0aGlzLnN0b3JhZ2UsIGluZGV4KTtcclxuICAgIGNvbnN0IGxzOiBzdHJpbmdbXSA9IFtdO1xyXG4gICAgd2hpbGUgKG5leHQpIHtcclxuICAgICAgaWYgKGtleS50ZXN0KG5leHQpKSBscy5wdXNoKG5leHQpO1xyXG4gICAgICBuZXh0ID0gU3RvcmFnZVV0aWwua2V5KHRoaXMuc3RvcmFnZSwgKytpbmRleCk7XHJcbiAgICB9XHJcbiAgICBscy5mb3JFYWNoKHYgPT4gU3RvcmFnZVV0aWwucmVtb3ZlKHRoaXMuc3RvcmFnZSwgdikpO1xyXG4gIH1cclxuXHJcbiAgY2xlYXIoKSB7XHJcbiAgICB0aGlzLnN0b3JhZ2UuY2xlYXIoKTtcclxuICB9XHJcbn1cclxuXHJcbkBJbmplY3RhYmxlKHsgcHJvdmlkZWRJbjogJ3Jvb3QnIH0pXHJcbmV4cG9ydCBjbGFzcyBMb2NhbFN0b3JhZ2VTZXJ2aWNlIGV4dGVuZHMgU3RvcmFnZVNlcnZpY2Uge1xyXG4gIGNvbnN0cnVjdG9yKCkge1xyXG4gICAgc3VwZXIoaXNCcm93c2VyID8gbG9jYWxTdG9yYWdlIDogbnVsbCk7XHJcbiAgfVxyXG59XHJcblxyXG5ASW5qZWN0YWJsZSh7IHByb3ZpZGVkSW46ICdyb290JyB9KVxyXG5leHBvcnQgY2xhc3MgU2Vzc2lvblN0b3JhZ2VTZXJ2aWNlIGV4dGVuZHMgU3RvcmFnZVNlcnZpY2Uge1xyXG4gIGNvbnN0cnVjdG9yKCkge1xyXG4gICAgc3VwZXIoaXNCcm93c2VyID8gc2Vzc2lvblN0b3JhZ2UgOiBudWxsKTtcclxuICB9XHJcbn1cclxuIl19