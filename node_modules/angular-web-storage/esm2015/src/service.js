import { __decorate, __metadata } from "tslib";
import { Injectable } from '@angular/core';
import { StorageUtil, isBrowser } from './util';
import * as i0 from "@angular/core";
let StorageService = class StorageService {
    constructor(storage) {
        this.storage = storage;
    }
    get(key) {
        return StorageUtil.get(this.storage, key);
    }
    set(key, value, expiredAt = 0, expiredUnit = 'd') {
        return StorageUtil.set(this.storage, key, value, expiredAt, expiredUnit);
    }
    /**
     * 删除指定key，如：
     * - `remove('key')` 删除 `key` 键
     * - `remove(/BMap_\w+/)` 批量删除所有 BMap_ 开头的键
     * @param key 键名或正则表达式
     */
    remove(key) {
        if (typeof key === 'string') {
            StorageUtil.remove(this.storage, key);
            return;
        }
        let index = 0;
        let next = StorageUtil.key(this.storage, index);
        const ls = [];
        while (next) {
            if (key.test(next))
                ls.push(next);
            next = StorageUtil.key(this.storage, ++index);
        }
        ls.forEach(v => StorageUtil.remove(this.storage, v));
    }
    clear() {
        this.storage.clear();
    }
};
StorageService.ctorParameters = () => [
    { type: Storage }
];
StorageService = __decorate([
    Injectable(),
    __metadata("design:paramtypes", [Storage])
], StorageService);
export { StorageService };
let LocalStorageService = class LocalStorageService extends StorageService {
    constructor() {
        super(isBrowser ? localStorage : null);
    }
};
LocalStorageService.ɵprov = i0.ɵɵdefineInjectable({ factory: function LocalStorageService_Factory() { return new LocalStorageService(); }, token: LocalStorageService, providedIn: "root" });
LocalStorageService = __decorate([
    Injectable({ providedIn: 'root' }),
    __metadata("design:paramtypes", [])
], LocalStorageService);
export { LocalStorageService };
let SessionStorageService = class SessionStorageService extends StorageService {
    constructor() {
        super(isBrowser ? sessionStorage : null);
    }
};
SessionStorageService.ɵprov = i0.ɵɵdefineInjectable({ factory: function SessionStorageService_Factory() { return new SessionStorageService(); }, token: SessionStorageService, providedIn: "root" });
SessionStorageService = __decorate([
    Injectable({ providedIn: 'root' }),
    __metadata("design:paramtypes", [])
], SessionStorageService);
export { SessionStorageService };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL2FuZ3VsYXItd2ViLXN0b3JhZ2UvIiwic291cmNlcyI6WyJzcmMvc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMzQyxPQUFPLEVBQUUsV0FBVyxFQUFlLFNBQVMsRUFBRSxNQUFNLFFBQVEsQ0FBQzs7QUFHN0QsSUFBYSxjQUFjLEdBQTNCLE1BQWEsY0FBYztJQUN6QixZQUFvQixPQUFnQjtRQUFoQixZQUFPLEdBQVAsT0FBTyxDQUFTO0lBQUcsQ0FBQztJQUV4QyxHQUFHLENBQUMsR0FBVztRQUNiLE9BQU8sV0FBVyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFLEdBQUcsQ0FBQyxDQUFDO0lBQzVDLENBQUM7SUFFRCxHQUFHLENBQ0QsR0FBVyxFQUNYLEtBQVUsRUFDVixZQUFvQixDQUFDLEVBQ3JCLGNBQTJCLEdBQUc7UUFFOUIsT0FBTyxXQUFXLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxPQUFPLEVBQUUsR0FBRyxFQUFFLEtBQUssRUFBRSxTQUFTLEVBQUUsV0FBVyxDQUFDLENBQUM7SUFDM0UsQ0FBQztJQUVEOzs7OztPQUtHO0lBQ0gsTUFBTSxDQUFDLEdBQW9CO1FBQ3pCLElBQUksT0FBTyxHQUFHLEtBQUssUUFBUSxFQUFFO1lBQzNCLFdBQVcsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLE9BQU8sRUFBRSxHQUFHLENBQUMsQ0FBQztZQUN0QyxPQUFPO1NBQ1I7UUFDRCxJQUFJLEtBQUssR0FBRyxDQUFDLENBQUM7UUFDZCxJQUFJLElBQUksR0FBRyxXQUFXLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxPQUFPLEVBQUUsS0FBSyxDQUFDLENBQUM7UUFDaEQsTUFBTSxFQUFFLEdBQWEsRUFBRSxDQUFDO1FBQ3hCLE9BQU8sSUFBSSxFQUFFO1lBQ1gsSUFBSSxHQUFHLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQztnQkFBRSxFQUFFLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO1lBQ2xDLElBQUksR0FBRyxXQUFXLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxPQUFPLEVBQUUsRUFBRSxLQUFLLENBQUMsQ0FBQztTQUMvQztRQUNELEVBQUUsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxXQUFXLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxPQUFPLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUN2RCxDQUFDO0lBRUQsS0FBSztRQUNILElBQUksQ0FBQyxPQUFPLENBQUMsS0FBSyxFQUFFLENBQUM7SUFDdkIsQ0FBQztDQUNGLENBQUE7O1lBdkM4QixPQUFPOztBQUR6QixjQUFjO0lBRDFCLFVBQVUsRUFBRTtxQ0FFa0IsT0FBTztHQUR6QixjQUFjLENBd0MxQjtTQXhDWSxjQUFjO0FBMkMzQixJQUFhLG1CQUFtQixHQUFoQyxNQUFhLG1CQUFvQixTQUFRLGNBQWM7SUFDckQ7UUFDRSxLQUFLLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxZQUFZLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ3pDLENBQUM7Q0FDRixDQUFBOztBQUpZLG1CQUFtQjtJQUQvQixVQUFVLENBQUMsRUFBRSxVQUFVLEVBQUUsTUFBTSxFQUFFLENBQUM7O0dBQ3RCLG1CQUFtQixDQUkvQjtTQUpZLG1CQUFtQjtBQU9oQyxJQUFhLHFCQUFxQixHQUFsQyxNQUFhLHFCQUFzQixTQUFRLGNBQWM7SUFDdkQ7UUFDRSxLQUFLLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxjQUFjLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQzNDLENBQUM7Q0FDRixDQUFBOztBQUpZLHFCQUFxQjtJQURqQyxVQUFVLENBQUMsRUFBRSxVQUFVLEVBQUUsTUFBTSxFQUFFLENBQUM7O0dBQ3RCLHFCQUFxQixDQUlqQztTQUpZLHFCQUFxQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgU3RvcmFnZVV0aWwsIEV4cGlyZWRVbml0LCBpc0Jyb3dzZXIgfSBmcm9tICcuL3V0aWwnO1xyXG5cclxuQEluamVjdGFibGUoKVxyXG5leHBvcnQgY2xhc3MgU3RvcmFnZVNlcnZpY2Uge1xyXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgc3RvcmFnZTogU3RvcmFnZSkge31cclxuXHJcbiAgZ2V0KGtleTogc3RyaW5nKSB7XHJcbiAgICByZXR1cm4gU3RvcmFnZVV0aWwuZ2V0KHRoaXMuc3RvcmFnZSwga2V5KTtcclxuICB9XHJcblxyXG4gIHNldChcclxuICAgIGtleTogc3RyaW5nLFxyXG4gICAgdmFsdWU6IGFueSxcclxuICAgIGV4cGlyZWRBdDogbnVtYmVyID0gMCxcclxuICAgIGV4cGlyZWRVbml0OiBFeHBpcmVkVW5pdCA9ICdkJyxcclxuICApIHtcclxuICAgIHJldHVybiBTdG9yYWdlVXRpbC5zZXQodGhpcy5zdG9yYWdlLCBrZXksIHZhbHVlLCBleHBpcmVkQXQsIGV4cGlyZWRVbml0KTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIOWIoOmZpOaMh+Wummtlee+8jOWmgu+8mlxyXG4gICAqIC0gYHJlbW92ZSgna2V5JylgIOWIoOmZpCBga2V5YCDplK5cclxuICAgKiAtIGByZW1vdmUoL0JNYXBfXFx3Ky8pYCDmibnph4/liKDpmaTmiYDmnIkgQk1hcF8g5byA5aS055qE6ZSuXHJcbiAgICogQHBhcmFtIGtleSDplK7lkI3miJbmraPliJnooajovr7lvI9cclxuICAgKi9cclxuICByZW1vdmUoa2V5OiBzdHJpbmcgfCBSZWdFeHApIHtcclxuICAgIGlmICh0eXBlb2Yga2V5ID09PSAnc3RyaW5nJykge1xyXG4gICAgICBTdG9yYWdlVXRpbC5yZW1vdmUodGhpcy5zdG9yYWdlLCBrZXkpO1xyXG4gICAgICByZXR1cm47XHJcbiAgICB9XHJcbiAgICBsZXQgaW5kZXggPSAwO1xyXG4gICAgbGV0IG5leHQgPSBTdG9yYWdlVXRpbC5rZXkodGhpcy5zdG9yYWdlLCBpbmRleCk7XHJcbiAgICBjb25zdCBsczogc3RyaW5nW10gPSBbXTtcclxuICAgIHdoaWxlIChuZXh0KSB7XHJcbiAgICAgIGlmIChrZXkudGVzdChuZXh0KSkgbHMucHVzaChuZXh0KTtcclxuICAgICAgbmV4dCA9IFN0b3JhZ2VVdGlsLmtleSh0aGlzLnN0b3JhZ2UsICsraW5kZXgpO1xyXG4gICAgfVxyXG4gICAgbHMuZm9yRWFjaCh2ID0+IFN0b3JhZ2VVdGlsLnJlbW92ZSh0aGlzLnN0b3JhZ2UsIHYpKTtcclxuICB9XHJcblxyXG4gIGNsZWFyKCkge1xyXG4gICAgdGhpcy5zdG9yYWdlLmNsZWFyKCk7XHJcbiAgfVxyXG59XHJcblxyXG5ASW5qZWN0YWJsZSh7IHByb3ZpZGVkSW46ICdyb290JyB9KVxyXG5leHBvcnQgY2xhc3MgTG9jYWxTdG9yYWdlU2VydmljZSBleHRlbmRzIFN0b3JhZ2VTZXJ2aWNlIHtcclxuICBjb25zdHJ1Y3RvcigpIHtcclxuICAgIHN1cGVyKGlzQnJvd3NlciA/IGxvY2FsU3RvcmFnZSA6IG51bGwpO1xyXG4gIH1cclxufVxyXG5cclxuQEluamVjdGFibGUoeyBwcm92aWRlZEluOiAncm9vdCcgfSlcclxuZXhwb3J0IGNsYXNzIFNlc3Npb25TdG9yYWdlU2VydmljZSBleHRlbmRzIFN0b3JhZ2VTZXJ2aWNlIHtcclxuICBjb25zdHJ1Y3RvcigpIHtcclxuICAgIHN1cGVyKGlzQnJvd3NlciA/IHNlc3Npb25TdG9yYWdlIDogbnVsbCk7XHJcbiAgfVxyXG59XHJcbiJdfQ==